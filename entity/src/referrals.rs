//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "referrals")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub referrer_id: Uuid,
    pub referred_id: Uuid,
    pub reward_amount: Decimal,
    pub referral_status: String,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::customers::Entity",
        from = "Column::ReferredId",
        to = "super::customers::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Customers2,
    #[sea_orm(
        belongs_to = "super::customers::Entity",
        from = "Column::ReferrerId",
        to = "super::customers::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Customers1,
}

impl ActiveModelBehavior for ActiveModel {}
